{"version":3,"sources":["components/Card/bycicle.svg","components/Header/logo.svg","components/ErrorPage/ErrorPage.tsx","actions/ActionType.ts","components/ErrorBoundary/ErrorBoundary.tsx","constants/colors.ts","constants/main.ts","actions/fetchIncident.ts","components/Filter/Filter.tsx","utils/getFormattedDate.ts","components/Card/Card.tsx","components/Card/utils.ts","components/Results/Results.tsx","components/Header/Header.tsx","components/Page/Page.tsx","types.ts","pages/MainPage.tsx","actions/fetchIncidents.ts","utils/objectToArray.ts","components/Map/Map.tsx","store/selectors.ts","actions/fetchIncidentPosition.ts","actions/fetchIncidentAndPosition.ts","pages/IncidentPage.tsx","pages/UnknownPage.tsx","store/reducers.ts","store/index.ts","components/App/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","ActionType","Wrapper","styled","div","_templateObject","ErrorPage","_ref","textBlock","actionsBlock","react_default","a","createElement","reloadPage","document","location","reload","ErrorBoundary","state","hasError","this","setState","components_ErrorPage_ErrorPage","react","es_button","type","onClick","props","children","Component","colors","BIKEWISE_API","PROXIMITY","INCIDENT_TYPE","pickProps","incident","id","title","description","incidentDate","occurred_at","updateDate","updated_at","address","imageUrl","media","image_url","imageUrlThumb","image_url_thumb","RangePicker","DatePicker","FormWrapper","Filter_templateObject","FormElem","_templateObject2","wide","width","undefined","serializeState","query","startDate","endDate","serializedState","format","queryString","stringify","Filter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleQueryChange","e","target","value","handleDateRangeChange","_ref2","_ref3","slicedToArray","startOf","endOf","handleSubmit","preventDefault","history","push","concat","_queryString$parse","parse","window","search","substr","moment","unix","_this$state","onSubmit","input","onChange","placeholder","allowClear","disabledDate","date","isAfter","htmlType","getFormattedDate","secondsTimestamp","_ref$withTime","arguments","length","withTime","Date","toLocaleString","hour","minute","weekday","day","month","year","replace","Card_templateObject","Content","Card_templateObject2","Title","_templateObject3","ImageWrapper","_templateObject4","Image","img","_templateObject5","UpdateBlock","_templateObject6","Card","str","threshold","linkPath","Card_Wrapper","react_router_dom","to","src","bycicleIcon","substring","index","indexOf","getLastSpaceIndex","TotalBlock","Results_templateObject","ItemsWrapper","Results_templateObject2","scrollTop","scrollTo","top","behavior","renderPageButton","page","icon","Results","curPageResults","_ref$curPage","curPage","totalCount","map","components_Card_Card","assign","key","pagination","hideOnSinglePage","current","total","pageSize","itemRender","header","Header_templateObject","Logo","Header_templateObject2","h1","Header_templateObject3","SubTitle","h2","Header_templateObject4","Header","Header_Wrapper","logo","alt","Header_Title","RequestStatus","Container","Page_templateObject","Page","components_Header_Header","SpinnerWrapper","MainPage_templateObject","ErrorBlock","MainPage_templateObject2","color","MainPage","dispatch","per_page","incident_type","proximity","INCIDENTS_REQUEST","fetch","then","response","json","_ref$incidents","incidents","reduce","memo","item","INCIDENTS_REQUEST_SUCCESS","payload","catch","error","INCIDENTS_REQUEST_FAILURE","message","messsage","fetchIncidents","_this$props","_this$props$curPageRe","incidentsLoadingStatus","totalResultsCount","FETCHING","spin","indicator","style","fontSize","FAILURE","components_Results_Results","components_Page_Page","components_Filter_Filter","renderResults","getCurPageElems","slice","connect","storeState","ownProps","obj","incidentsArray","byId","keys","reverse","normalizedQuery","toLowerCase","filteredIncidents","filter","loadingStatus","Map_templateObject","WrappedMap","withScriptjs","withGoogleMap","center","_ref$defaultZoom","defaultZoom","lib","defaultCenter","position","Map","googleMapURL","loadingElement","height","containerElement","Map_Container","mapElement","getIncident","fetchIncidentPosition","getState","_getIncident","occurred_after","occurred_before","INCIDENT_POSITION_REQUEST","features","geometry","coordinates","coords","lng","lat","INCIDENT_POSITION_REQUEST_SUCCESS","fetchIncidentAndPosition","INCIDENT_REQUEST","INCIDENT_REQUEST_SUCCESS","fetchIncident","NavBlock","IncidentPage_templateObject","IconWrapper","span","IncidentPage_templateObject2","IncidentPage","_this$props2","typography","level","components_Map_Map","match","params","objectSpread","UnknownPage","initState","UNINITED","rootReducer","combineReducers","action","SUCCESS","_action$payload","defineProperty","_action$payload2","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","App","components_ErrorBoundary_ErrorBoundary","es","store","basename","react_router","path","exact","component","ReactDOM","render","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.1fb2904d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bycicle.b104a8d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.aba6572d.svg\";","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\ntype ErrorPageProps = {\n  textBlock: React.ReactNode;\n  actionsBlock: React.ReactNode;\n};\n\nconst ErrorPage: React.FC<ErrorPageProps> = ({ textBlock, actionsBlock }) => (\n  <Wrapper>\n    <p>{textBlock}</p>\n\n    {actionsBlock}\n  </Wrapper>\n);\n\nexport default ErrorPage;\n","export enum ActionType {\n  INCIDENT_REQUEST = 'INCIDENT_REQUEST',\n  INCIDENT_REQUEST_SUCCESS = 'INCIDENT_REQUEST_SUCCESS',\n\n  INCIDENTS_REQUEST = 'INCIDENTS_REQUEST',\n  INCIDENTS_REQUEST_SUCCESS = 'INCIDENTS_REQUEST_SUCCESS',\n  INCIDENTS_REQUEST_FAILURE = 'INCIDENTS_REQUEST_FAILURE',\n\n  INCIDENT_POSITION_REQUEST = 'INCIDENT_POSITION_REQUEST',\n  INCIDENT_POSITION_REQUEST_SUCCESS = 'INCIDENT_POSITION_REQUEST_SUCCESS'\n}\n","import React, { Component, Fragment } from 'react';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport { Button } from 'antd';\n\nconst reloadPage = () => document.location.reload();\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <ErrorPage\n          textBlock={\n            <Fragment>\n              Something has gone wrong(\n              <br />\n              Please reload the page\n            </Fragment>\n          }\n          actionsBlock={\n            <Button type=\"primary\" onClick={reloadPage}>\n              Reload\n            </Button>\n          }\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export default {\n  gray: '#e8e8e8',\n  red: '#f5222d'\n};\n","export const BIKEWISE_API = 'https://bikewise.org:443/api/v2';\nexport const PROXIMITY = 'Berlin';\nexport const INCIDENT_TYPE = 'theft';\nexport const RESULTS_PER_PAGE = 10;\n\nexport const GOOGLE_MAP_API_KEY = 'AIzaSyC9NBq_W0KRxYjULZVTJoH_Qh72Z8rN1ZA';\n","import { Dispatch } from 'redux';\nimport { BIKEWISE_API } from '../constants/main';\nimport { ActionType } from './ActionType';\n\nexport const pickProps = (incident: any) => ({\n  id: incident.id,\n  title: incident.title,\n  description: incident.description,\n  incidentDate: incident.occurred_at,\n  updateDate: incident.updated_at,\n  address: incident.address,\n  imageUrl: incident.media && incident.media.image_url,\n  imageUrlThumb: incident.media && incident.media.image_url_thumb\n});\n\nexport function fetchIncident({ id }: { id: number }) {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.INCIDENT_REQUEST\n    });\n\n    return fetch(`${BIKEWISE_API}/incidents/${id}`)\n      .then(response => response.json())\n      .then(({ incident }) => pickProps(incident))\n      .then(incident =>\n        dispatch({\n          type: ActionType.INCIDENT_REQUEST_SUCCESS,\n          payload: { id, incident }\n        })\n      );\n  };\n}\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\n\nimport { Input, DatePicker, Button } from 'antd';\nimport { RangePickerValue } from 'antd/lib/date-picker/interface';\nimport queryString from 'querystring';\n\nimport moment, { Moment } from 'moment';\nimport { History } from 'history';\n\nconst { RangePicker } = DatePicker;\n\nconst FormWrapper = styled.div`\n  display: flex;\n  margin-bottom: 32px;\n`;\n\ntype FormElemProps = {\n  wide?: boolean;\n  width?: number;\n};\n\nconst FormElem = styled.div<FormElemProps>`\n  width: ${props => (props.wide ? '100%' : props.width + 'px')};\n  flex-shrink: ${props => (props.width ? 0 : undefined)};\n\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n\nconst serializeState = ({ query, startDate, endDate }: FormState) => {\n  const serializedState: { [key: string]: string } = {};\n\n  if (query) {\n    serializedState.query = query;\n  }\n\n  if (startDate) {\n    serializedState.startDate = startDate.format('X');\n  }\n\n  if (endDate) {\n    serializedState.endDate = endDate.format('X');\n  }\n\n  return queryString.stringify(serializedState);\n};\n\ntype FormState = {\n  query: string | undefined;\n  startDate: Moment | undefined;\n  endDate: Moment | undefined;\n};\n\ntype FilterProps = {\n  history: History;\n};\n\nclass Filter extends Component<FilterProps, FormState> {\n  constructor(props: FilterProps) {\n    super(props);\n\n    const { query, startDate, endDate } = queryString.parse(\n      window.location.search.substr(1)\n    );\n\n    this.state = {\n      query: query as string | undefined,\n      startDate: startDate ? moment.unix(+startDate) : undefined,\n      endDate: endDate ? moment.unix(+endDate) : undefined\n    };\n  }\n\n  handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      query: e.target.value\n    });\n  };\n\n  handleDateRangeChange = ([startDate, endDate]: RangePickerValue) => {\n    this.setState({\n      startDate: startDate && startDate.startOf('day'),\n      endDate: endDate && endDate.endOf('day')\n    });\n  };\n\n  handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    this.props.history.push(`/?${serializeState(this.state)}`);\n  };\n\n  render() {\n    const { startDate, endDate } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormWrapper>\n          <FormElem wide>\n            <Input\n              onChange={this.handleQueryChange}\n              value={this.state.query}\n              placeholder=\"Input description...\"\n              allowClear\n            />\n          </FormElem>\n\n          <FormElem width={280}>\n            <RangePicker\n              disabledDate={date => !!date && date.isAfter()}\n              onChange={this.handleDateRangeChange}\n              value={startDate && endDate ? [startDate, endDate] : undefined}\n            />\n          </FormElem>\n\n          <Button type=\"primary\" htmlType=\"submit\">\n            Find cases\n          </Button>\n        </FormWrapper>\n      </form>\n    );\n  }\n}\n\nexport default Filter;\n","const getFormattedDate = (\n  secondsTimestamp?: number,\n  { withTime = true } = {}\n) =>\n  secondsTimestamp\n    ? new Date(secondsTimestamp * 1000)\n        .toLocaleString('en-US', {\n          hour: withTime ? 'numeric' : undefined,\n          minute: withTime ? 'numeric' : undefined,\n          weekday: 'short',\n          day: 'numeric',\n          month: 'short',\n          year: 'numeric'\n        })\n        .replace(/,/, '')\n    : null;\n\nexport default getFormattedDate;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Incident } from '../../types';\nimport { NavLink } from 'react-router-dom';\n\nimport colors from '../../constants/colors';\nimport bycicleIcon from './bycicle.svg';\nimport getFormattedDate from '../../utils/getFormattedDate';\nimport { getTextWithDots } from './utils';\n\nconst Wrapper = styled.div`\n  display: flex;\n  border: 1px solid ${colors.gray};\n  margin: 12px 0;\n`;\n\nconst Content = styled.div`\n  padding: 16px 24px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.4;\n`;\n\nconst IMAGE_SIZE = 200;\n\nconst ImageWrapper = styled.div`\n  width: ${IMAGE_SIZE}px;\n  height: ${IMAGE_SIZE}px;\n  border-right: 1px solid ${colors.gray};\n  border-bottom: 1px solid ${colors.gray};\n  margin-bottom: -1px;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n`;\n\nconst UpdateBlock = styled.div`\n  margin-top: auto;\n  align-self: flex-end;\n  font-size: 13px;\n`;\n\nconst Card: React.FC<Incident> = ({\n  id,\n  title,\n  description,\n  imageUrlThumb,\n  address,\n  incidentDate,\n  updateDate\n}) => {\n  const linkPath = `/incident/${id}`;\n\n  return (\n    <Wrapper>\n      <NavLink to={linkPath}>\n        <ImageWrapper>\n          <Image src={imageUrlThumb || bycicleIcon} />\n        </ImageWrapper>\n      </NavLink>\n\n      <Content>\n        <NavLink to={linkPath}>\n          <Title>{title}</Title>\n        </NavLink>\n\n        <p>{getTextWithDots(description || 'No description', 315)}</p>\n\n        <p>\n          {!!incidentDate &&\n            getFormattedDate(incidentDate, { withTime: false })}\n          {!!(incidentDate && address) && ` - `}\n          {address}\n        </p>\n\n        {!!updateDate && (\n          <UpdateBlock>\n            Updated: {getFormattedDate(updateDate, { withTime: false })}\n          </UpdateBlock>\n        )}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Card;\n","function getLastSpaceIndex(str: string, threshold: number): number {\n  let index = 0;\n\n  while ((index = str.indexOf(' ', index + 1)) > 0 && index < threshold) {\n    continue;\n  }\n\n  return index;\n}\n\nexport function getTextWithDots(str: string, threshold: number): string {\n  return str.length > threshold\n    ? str.substring(0, getLastSpaceIndex(str, threshold)) + '...'\n    : str;\n}\n","import React, { Fragment } from 'react';\nimport styled from '@emotion/styled';\n\nimport { Incident } from '../../types';\n\nimport { NavLink } from 'react-router-dom';\nimport Card from '../Card/Card';\nimport { Pagination, Icon } from 'antd';\nimport { RESULTS_PER_PAGE } from '../../constants/main';\n\nconst TotalBlock = styled.div`\n  text-align: right;\n  margin-bottom: 12px;\n`;\n\nconst ItemsWrapper = styled.div`\n  padding-bottom: 12px;\n`;\n\nconst scrollTop = () =>\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n  });\n\nconst renderPageButton = (\n  page: number,\n  type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next'\n): React.ReactNode => {\n  switch (type) {\n    case 'page':\n      return (\n        <NavLink to={`/?page=${page}`} onClick={scrollTop}>\n          {page}\n        </NavLink>\n      );\n    case 'prev':\n      return page > 0 ? (\n        <NavLink to={`/?page=${page}`} onClick={scrollTop}>\n          <Icon type=\"left\" />\n        </NavLink>\n      ) : (\n        <a>\n          <Icon type=\"left\" />\n        </a>\n      );\n    case 'next':\n      return (\n        <NavLink to={`/?page=${page}`} onClick={scrollTop}>\n          <Icon type=\"right\" />\n        </NavLink>\n      );\n    case 'jump-prev':\n    case 'jump-next':\n      return <span>&#8226;&#8226;&#8226;</span>;\n  }\n};\n\ntype ResultItemsProps = {\n  curPageResults?: Array<Incident>;\n  totalCount: number;\n  curPage?: number;\n};\n\nconst Results: React.FC<ResultItemsProps> = ({\n  curPageResults,\n  curPage = 1,\n  totalCount\n}) => {\n  return (\n    <div>\n      <TotalBlock>Total: {totalCount}</TotalBlock>\n\n      {totalCount < 1 ? (\n        <div>No results</div>\n      ) : (\n        <Fragment>\n          <ItemsWrapper>\n            {curPageResults &&\n              curPageResults.map(incident => (\n                <Card {...incident} key={incident.id} />\n              ))}\n          </ItemsWrapper>\n\n          <Pagination\n            hideOnSinglePage\n            current={curPage}\n            total={totalCount}\n            pageSize={RESULTS_PER_PAGE}\n            itemRender={renderPageButton}\n          />\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport logo from './logo.svg';\nimport { NavLink } from 'react-router-dom';\n\nconst Wrapper = styled.header`\n  display: flex;\n  align-items: center;\n  margin-bottom: 32px;\n`;\n\nconst Logo = styled.img`\n  width: 100px;\n  height: 100px;\n  margin-right: 32px;\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  font-weight: 600;\n  font-size: 38px;\n  line-height: 1.23;\n`;\n\nconst SubTitle = styled.h2`\n  margin: 0;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.35;\n`;\n\nconst Header: React.FC = () => (\n  <Wrapper>\n    <NavLink to={'/'}>\n      <Logo src={logo} alt=\"logo\" />\n    </NavLink>\n\n    <div>\n      <Title>Police Department of Berlin</Title>\n      <SubTitle>Stolen Bikes</SubTitle>\n    </div>\n  </Wrapper>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Header from '../Header/Header';\n\nconst Container = styled.div`\n  min-width: 768px;\n  max-width: 1024px;\n  margin: 0 auto;\n  padding: 16px;\n  padding-top: 24px;\n  padding-bottom: 56px;\n`;\n\nconst Page: React.FC = ({ children }) => {\n  return (\n    <Container>\n      <Header />\n      {children}\n    </Container>\n  );\n};\n\nexport default Page;\n","import { ActionType } from './actions/ActionType';\n\nexport type Incident = {\n  id: number;\n  title: string;\n  description?: string;\n  reportDate?: number;\n  incidentDate?: number;\n  updateDate?: number;\n  address?: string;\n  coordinates?: Coordinates;\n  imageUrl?: string;\n  imageUrlThumb?: string;\n};\n\nexport type Incidents = {\n  [id: number]: Incident;\n};\n\nexport interface Coordinates {\n  lng: number;\n  lat: number;\n}\n\nexport interface Action {\n  type: ActionType;\n  payload: {\n    [key: string]: any;\n  };\n}\n\nexport enum RequestStatus {\n  UNINITED = 'UNINITED',\n  FETCHING = 'FETCHING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE'\n}\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\nimport styled from '@emotion/styled';\n\nimport color from '../constants/colors';\n\nimport { fetchIncidents } from '../actions/fetchIncidents';\n\nimport Filter from '../components/Filter/Filter';\nimport Results from '../components/Results/Results';\nimport Page from '../components/Page/Page';\nimport { Icon, Spin } from 'antd';\n\nimport { StoreState, Dispatch } from '../store';\nimport { Incident, RequestStatus } from '../types';\nimport { RouteComponentProps } from 'react-router';\nimport { RESULTS_PER_PAGE } from '../constants/main';\nimport objectToArray from '../utils/objectToArray';\n\nconst SpinnerWrapper = styled.div`\n  padding-top: 42px;\n  text-align: center;\n`;\n\nconst ErrorBlock = styled.div`\n  color: ${color.red};\n`;\n\ninterface MainPageProps extends RouteComponentProps {\n  curPage: number;\n  curPageResults: Array<Incident>;\n  incidentsLoadingStatus: RequestStatus;\n  dispatch: Dispatch;\n  totalResultsCount: number;\n}\n\nclass MainPage extends Component<MainPageProps> {\n  componentDidMount() {\n    this.props.dispatch(fetchIncidents());\n  }\n\n  renderResults() {\n    const {\n      curPage,\n      curPageResults = [],\n      incidentsLoadingStatus,\n      totalResultsCount\n    } = this.props;\n\n    switch (incidentsLoadingStatus) {\n      case RequestStatus.FETCHING: {\n        return (\n          <SpinnerWrapper>\n            <Spin\n              indicator={<Icon type=\"loading\" style={{ fontSize: 42 }} spin />}\n            />\n          </SpinnerWrapper>\n        );\n      }\n\n      case RequestStatus.FAILURE: {\n        return <ErrorBlock>Something has gone wrong(</ErrorBlock>;\n      }\n\n      default: {\n        return (\n          <Results\n            curPage={curPage}\n            curPageResults={curPageResults}\n            totalCount={totalResultsCount}\n          />\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Page>\n        <Filter history={this.props.history} />\n\n        {this.renderResults()}\n      </Page>\n    );\n  }\n}\n\nconst getCurPageElems = (incidents: Array<any>, page: number) =>\n  incidents.slice(RESULTS_PER_PAGE * (page - 1), RESULTS_PER_PAGE * page);\n\nconst mapStateToProps = (storeState: StoreState, ownProps: MainPageProps) => {\n  const incidentsArray = objectToArray(storeState.incidents.byId).reverse();\n  const { page, query, startDate, endDate } = queryString.parse(\n    ownProps.location.search\n  );\n\n  const curPage = +(page || 1);\n  const normalizedQuery = query && (query as string).toLowerCase();\n\n  const filteredIncidents = incidentsArray.filter(incident => {\n    return (\n      !(\n        normalizedQuery &&\n        incident.title.toLowerCase().indexOf(normalizedQuery) == -1\n      ) &&\n      !(startDate && startDate >= incident.incidentDate) &&\n      !(endDate && endDate <= incident.incidentDate)\n    );\n  });\n\n  return {\n    curPage,\n    totalResultsCount: filteredIncidents.length,\n    curPageResults: getCurPageElems(filteredIncidents, curPage),\n    incidentsLoadingStatus: storeState.incidents.loadingStatus\n  };\n};\n\nexport default connect(mapStateToProps)(MainPage);\n","import { Dispatch } from 'redux';\nimport queryString from 'query-string';\nimport { BIKEWISE_API, PROXIMITY } from '../constants/main';\nimport { ActionType } from './ActionType';\nimport { pickProps } from './fetchIncident';\n\nexport function fetchIncidents() {\n  const query = {\n    per_page: 1000000,\n    incident_type: 'theft',\n    proximity: PROXIMITY\n  };\n\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.INCIDENTS_REQUEST\n    });\n\n    return fetch(`${BIKEWISE_API}/incidents/?${queryString.stringify(query)}`)\n      .then(response => response.json())\n      .then(({ incidents = [] }) =>\n        incidents.reduce((memo: any, item: any) => {\n          memo[item.id] = pickProps(item);\n          return memo;\n        }, {})\n      )\n      .then(incidents =>\n        dispatch({\n          type: ActionType.INCIDENTS_REQUEST_SUCCESS,\n          payload: { incidents }\n        })\n      )\n      .catch(error =>\n        dispatch({\n          type: ActionType.INCIDENTS_REQUEST_FAILURE,\n          payload: { message: error.messsage }\n        })\n      );\n  };\n}\n","export default function<T = any>(obj: { [key: string]: T }): Array<T> {\n  return Object.keys(obj).map(key => obj[key]);\n}\n","import React from 'react';\nimport { GOOGLE_MAP_API_KEY } from '../../constants/main';\n\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from 'react-google-maps';\n\nimport { Coordinates } from '../../types';\nimport styled from '@emotion/styled';\n\ntype MapProps = {\n  center?: Coordinates;\n  defaultZoom?: number;\n};\n\nconst Container = styled.div`\n  height: 400px;\n  margin-bottom: 12px;\n`;\n\nconst WrappedMap = withScriptjs(\n  withGoogleMap(({ center, defaultZoom = 12 }: MapProps) => (\n    <GoogleMap defaultZoom={defaultZoom} defaultCenter={center}>\n      <Marker position={center} />\n    </GoogleMap>\n  ))\n);\n\nconst Map: React.FC<MapProps> = props => {\n  return (\n    <WrappedMap\n      googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${GOOGLE_MAP_API_KEY}`}\n      loadingElement={<div style={{ height: `100%` }} />}\n      containerElement={<Container />}\n      mapElement={<div style={{ height: `100%` }} />}\n      {...props}\n    />\n  );\n};\n\nexport default Map;\n","import { StoreState } from './index';\nimport { Incident } from '../types';\n\nexport default function getIncident(state: StoreState, id: number): Incident {\n  return state.incidents.byId[id];\n}\n","import { BIKEWISE_API, INCIDENT_TYPE } from '../constants/main';\nimport { Dispatch } from 'redux';\nimport queryString from 'query-string';\nimport { ActionType } from './ActionType';\nimport getIncident from '../store/selectors';\n\nexport function fetchIncidentPosition({ id }: { id: number }) {\n  return (dispatch: Dispatch, getState: Function) => {\n    const { title, incidentDate } = getIncident(getState(), id);\n\n    const query = {\n      query: title,\n      occurred_after: incidentDate,\n      occurred_before: incidentDate,\n      incident_type: INCIDENT_TYPE\n    };\n\n    dispatch({\n      type: ActionType.INCIDENT_POSITION_REQUEST,\n      payload: { query }\n    });\n\n    return fetch(`${BIKEWISE_API}/locations/?${queryString.stringify(query)}`)\n      .then(response => response.json())\n      .then(json => {\n        // correct response should contain only one item\n        if (json.features.length > 1 || json.features.length === 0) {\n          return null;\n        }\n\n        return json.features[0].geometry.coordinates;\n      })\n      .then((coords: Array<number>) => {\n        const coordinates = coords\n          ? {\n              lng: coords[0],\n              lat: coords[1]\n            }\n          : null;\n\n        dispatch({\n          type: ActionType.INCIDENT_POSITION_REQUEST_SUCCESS,\n          payload: { id, coordinates }\n        });\n      });\n  };\n}\n","import { fetchIncident } from './fetchIncident';\nimport { fetchIncidentPosition } from './fetchIncidentPosition';\nimport { Dispatch } from '../store';\n\nexport function fetchIncidentAndPosition({ id }: { id: number }) {\n  return (dispatch: Dispatch) =>\n    dispatch(fetchIncident({ id })).then(() =>\n      dispatch(fetchIncidentPosition({ id }))\n    );\n}\n","import React, { Component, Fragment } from 'react';\nimport styled from '@emotion/styled';\n\nimport { connect } from 'react-redux';\nimport getFormattedDate from '../utils/getFormattedDate';\nimport { Dispatch, StoreState } from '../store';\n\nimport { Incident } from '../types';\n\nimport Page from '../components/Page/Page';\nimport { NavLink } from 'react-router-dom';\nimport { Icon, Typography } from 'antd';\nimport Map from '../components/Map/Map';\n\nimport { fetchIncidentPosition } from '../actions/fetchIncidentPosition';\nimport { fetchIncidentAndPosition } from '../actions/fetchIncidentAndPosition';\nimport getIncident from '../store/selectors';\n\nconst NavBlock = styled.div`\n  margin-bottom: 12px;\n`;\n\nconst IconWrapper = styled.span`\n  margin-left: 6px;\n`;\n\ninterface IncidentPageProps extends Incident {\n  dispatch: Dispatch;\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nclass IncidentPage extends Component<IncidentPageProps> {\n  componentDidMount() {\n    const { id, incidentDate, dispatch } = this.props;\n\n    if (incidentDate) {\n      dispatch(fetchIncidentPosition({ id }));\n    } else {\n      dispatch(fetchIncidentAndPosition({ id }));\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      incidentDate,\n      address,\n      coordinates,\n      updateDate\n    } = this.props;\n\n    return (\n      <Page>\n        <NavBlock>\n          <NavLink to={'/'}>\n            Back\n            <IconWrapper>\n              <Icon type=\"rollback\" />\n            </IconWrapper>\n          </NavLink>\n        </NavBlock>\n\n        <Typography.Title level={3}>{title || 'Loading...'}</Typography.Title>\n\n        <p>\n          <b>Date stolen:</b> {getFormattedDate(incidentDate)}\n          <br />\n          <b>Location:</b> {address}\n          <br />\n          <b>Report was updated:</b> {getFormattedDate(updateDate)}\n        </p>\n\n        {!!description && (\n          <Fragment>\n            <Typography.Title level={3}>\n              Description of incident\n            </Typography.Title>\n            <p>{description}</p>\n          </Fragment>\n        )}\n\n        {coordinates && <Map center={coordinates} />}\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  storeState: StoreState,\n  ownProps: IncidentPageProps\n) => {\n  const id = +ownProps.match.params.id;\n\n  return {\n    id,\n    ...getIncident(storeState, id)\n  };\n};\n\nexport default connect(mapStateToProps)(IncidentPage);\n","import React from 'react';\nimport ErrorPage from '../components/ErrorPage/ErrorPage';\nimport { NavLink } from 'react-router-dom';\nimport { Button, Typography } from 'antd';\n\nconst UnknownPage: React.FC = () => {\n  return (\n    <ErrorPage\n      textBlock={<Typography.Title>Page not found</Typography.Title>}\n      actionsBlock={\n        <NavLink to={'/'}>\n          <Button type=\"primary\">Go to main page</Button>\n        </NavLink>\n      }\n    />\n  );\n};\n\nexport default UnknownPage;\n","import { combineReducers } from 'redux';\nimport { ActionType } from '../actions/ActionType';\nimport { Action, RequestStatus } from '../types';\nimport { IncidentsState, StoreState } from './index';\n\nconst initState = {\n  byId: [],\n  loadingStatus: RequestStatus.UNINITED\n};\n\n// @TODO: destructuring operators just for prototype, could be replaced by lenses or some other solution for immutable objects\nfunction incidents(\n  state: IncidentsState = initState,\n  action: Action\n): IncidentsState {\n  switch (action.type) {\n    case ActionType.INCIDENTS_REQUEST: {\n      return {\n        ...state,\n        loadingStatus: RequestStatus.FETCHING\n      };\n    }\n    case ActionType.INCIDENTS_REQUEST_FAILURE: {\n      return {\n        ...state,\n        loadingStatus: RequestStatus.FAILURE\n      };\n    }\n    case ActionType.INCIDENTS_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        loadingStatus: RequestStatus.SUCCESS,\n        byId: action.payload.incidents\n      };\n    }\n    case ActionType.INCIDENT_REQUEST_SUCCESS: {\n      const { id, incident } = action.payload;\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [id]: incident\n        }\n      };\n    }\n    case ActionType.INCIDENT_POSITION_REQUEST_SUCCESS: {\n      const { id, coordinates } = action.payload;\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [id]: {\n            ...state.byId[id],\n            coordinates\n          }\n        }\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers<StoreState, Action>({\n  incidents\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware, { ThunkDispatch } from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { Action, Incidents, RequestStatus } from '../types';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport type IncidentsState = {\n  byId: Incidents;\n  loadingStatus: RequestStatus;\n};\n\nexport interface StoreState {\n  incidents: IncidentsState;\n}\n\nexport type Dispatch = ThunkDispatch<StoreState, any, Action>;\n\nconst index = createStore<StoreState, any, any, any>(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nexport default index;\n","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nimport MainPage from '../../pages/MainPage';\nimport IncidentPage from '../../pages/IncidentPage';\nimport UnknownPage from '../../pages/UnknownPage';\n\nimport store from '../../store';\n\nimport 'antd/dist/antd.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <ErrorBoundary>\n        <Provider store={store}>\n          <Router basename=\"/coding-challenge-frontend-react/\">\n            <Switch>\n              <Route path=\"/\" exact component={MainPage} />\n              <Route path=\"/incident/:id\" component={IncidentPage} />\n              <Route component={UnknownPage} />\n            </Switch>\n          </Router>\n        </Provider>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}